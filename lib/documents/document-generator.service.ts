/**
 * Document Generator Service
 * Creates professional quote documents, project plans, and reports
 */

import jsPDF from 'jspdf'

export interface QuoteDocument {
  projectName: string
  client: string
  date: string
  validUntil: string
  reference: string
  summary: {
    totalCost: number
    depositRequired: number
    timeline: string
  }
  breakdown: {
    materials: Array<{ item: string; quantity: number; unit: string; unitCost: number; total: number }>
    labour: Array<{ trade: string; days: number; rate: number; total: number }>
    other: Array<{ description: string; cost: number }>
  }
  terms: string[]
  notes: string[]
}

export interface ProjectPlan {
  projectName: string
  startDate: string
  endDate: string
  phases: Array<{
    phase: string
    duration: string
    startWeek: number
    tasks: string[]
    dependencies?: string[]
    tradespeople: string[]
  }>
  milestones: Array<{
    milestone: string
    date: string
    paymentDue?: number
  }>
  riskFactors: string[]
}

export class DocumentGeneratorService {
  /**
   * Generate a professional quote document as PDF
   */
  generateQuotePDF(
    projectType: string,
    specifications: any,
    breakdown: any
  ): Buffer {
    const doc = new jsPDF()
    
    // Add AskToddy logo/branding at the top
    doc.setFillColor(255, 107, 53) // Orange gradient start color
    doc.rect(0, 0, 210, 30, 'F') // Header background
    
    // Logo text (since we don't have image file)
    doc.setTextColor(255, 255, 255)
    doc.setFontSize(24)
    doc.setFont('helvetica', 'bold')
    doc.text('AskToddy', 20, 20)
    
    doc.setFontSize(12)
    doc.setFont('helvetica', 'normal')
    doc.text('Construction Cost Expert', 80, 20)
    
    // Reset colors for document content
    doc.setTextColor(0, 0, 0)
    
    // Document title
    doc.setFontSize(20)
    doc.setFont('helvetica', 'bold')
    doc.text('CONSTRUCTION QUOTE', 20, 50)
    
    // Reference and date info
    const date = new Date().toLocaleDateString('en-GB')
    const validUntil = new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toLocaleDateString('en-GB')
    const reference = `Q-${Date.now().toString().slice(-8)}`
    
    doc.setFontSize(10)
    doc.setFont('helvetica', 'normal')
    doc.text(`Reference: ${reference}`, 20, 65)
    doc.text(`Date: ${date}`, 20, 72)
    doc.text(`Valid Until: ${validUntil}`, 20, 79)
    
    // Project details
    doc.setFontSize(14)
    doc.setFont('helvetica', 'bold')
    doc.text(`PROJECT: ${projectType.toUpperCase().replace(/_/g, ' ')}`, 20, 95)
    
    if (specifications?.size) {
      doc.setFontSize(10)
      doc.setFont('helvetica', 'normal')
      doc.text(`Size: ${specifications.size}`, 20, 105)
    }
    if (specifications?.location) {
      doc.text(`Location: ${specifications.location}`, 20, 112)
    }
    
    // Cost summary box
    doc.setDrawColor(255, 107, 53)
    doc.setLineWidth(0.5)
    doc.rect(20, 125, 170, 40)
    
    doc.setFontSize(14)
    doc.setFont('helvetica', 'bold')
    doc.text('COST SUMMARY', 25, 135)
    
    doc.setFontSize(12)
    doc.setFont('helvetica', 'normal')
    const totalCost = breakdown.totalCost?.average || breakdown.totalCost || 0
    doc.text(`Total Project Cost: £${totalCost.toLocaleString()} (inc. VAT)`, 25, 145)
    doc.text(`Deposit Required (25%): £${Math.round(totalCost * 0.25).toLocaleString()}`, 25, 152)
    
    const timeline = breakdown.timeline?.map?.((t: any) => t.duration).join(', ') || 'TBD'
    doc.text(`Timeline: ${timeline}`, 25, 159)
    
    // Materials breakdown
    let yPos = 180
    doc.setFontSize(12)
    doc.setFont('helvetica', 'bold')
    doc.text('MATERIALS', 20, yPos)
    yPos += 10
    
    if (breakdown.materials && breakdown.materials.length > 0) {
      doc.setFontSize(10)
      doc.setFont('helvetica', 'normal')
      breakdown.materials.forEach((item: any) => {
        if (yPos > 270) { // Start new page if needed
          doc.addPage()
          yPos = 20
        }
        doc.text(`${item.item}: ${item.quantity} ${item.unit} @ £${item.unitCost}/each = £${item.totalCost}`, 25, yPos)
        yPos += 7
      })
    }
    
    // Labour breakdown
    yPos += 10
    doc.setFontSize(12)
    doc.setFont('helvetica', 'bold')
    doc.text('LABOUR', 20, yPos)
    yPos += 10
    
    if (breakdown.labour && breakdown.labour.length > 0) {
      doc.setFontSize(10)
      doc.setFont('helvetica', 'normal')
      breakdown.labour.forEach((item: any) => {
        if (yPos > 270) {
          doc.addPage()
          yPos = 20
        }
        doc.text(`${item.trade}: ${item.days} days @ £${item.dayRate}/day = £${item.totalCost}`, 25, yPos)
        yPos += 7
      })
    }
    
    // Footer with contact info
    doc.setFontSize(8)
    doc.setTextColor(128, 128, 128)
    doc.text('Tool hire available from Toddy Tool Hire (Suffolk/Essex) - 01394 447658', 20, 285)
    doc.text('Generated by AskToddy AI - asktoddyai.com', 20, 290)
    
    return Buffer.from(doc.output('arraybuffer'))
  }

  /**
   * Generate a professional quote document format
   */
  generateQuoteDocument(
    projectType: string,
    specifications: any,
    breakdown: any
  ): string {
    const date = new Date().toLocaleDateString('en-GB')
    const validUntil = new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toLocaleDateString('en-GB')
    const reference = `Q-${Date.now().toString().slice(-8)}`

    let document = `
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
           CONSTRUCTION QUOTE
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Reference: ${reference}
Date: ${date}
Valid Until: ${validUntil}

PROJECT: ${projectType.toUpperCase()}
${specifications.size ? `Size: ${specifications.size}` : ''}
${specifications.location ? `Location: ${specifications.location}` : ''}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
COST SUMMARY
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Total Project Cost: £${(breakdown.totalCost?.average || breakdown.totalCost || 0).toLocaleString()} (inc. VAT)
Deposit Required (25%): £${Math.round((breakdown.totalCost?.average || breakdown.totalCost || 0) * 0.25).toLocaleString()}
Timeline: ${breakdown.timeline?.map?.((t: any) => t.duration).join(', ') || 'TBD'}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
DETAILED BREAKDOWN
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

MATERIALS (£${breakdown.materials?.reduce((s: number, m: any) => s + m.totalCost, 0).toLocaleString() || '0'})
─────────────────────────────────────`

    if (breakdown.materials) {
      breakdown.materials.forEach((item: any) => {
        document += `
${item.item.padEnd(25)} ${String(item.quantity).padStart(5)} ${item.unit.padEnd(10)} £${item.totalCost.toLocaleString().padStart(8)}`
      })
    }

    document += `

LABOUR (£${breakdown.labour?.reduce((s: number, l: any) => s + l.totalCost, 0).toLocaleString() || '0'})
─────────────────────────────────────`

    if (breakdown.labour) {
      breakdown.labour.forEach((item: any) => {
        document += `
${item.trade.padEnd(25)} ${String(item.days).padStart(5)} days @ £${item.dayRate}/day £${item.totalCost.toLocaleString().padStart(8)}`
      })
    }

    document += `

ADDITIONAL COSTS
─────────────────────────────────────
Contingency (15%)         £${breakdown.contingency?.toLocaleString().padStart(8) || '0'}
VAT (20%)                 £${breakdown.vat?.toLocaleString().padStart(8) || '0'}
Skip Hire                 £220

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
PAYMENT TERMS
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

• 25% deposit to secure booking
• 25% on completion of first fix
• 25% on second fix
• 25% on completion

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
TERMS & CONDITIONS
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

• Quote valid for 30 days
• Prices subject to site survey
• Additional work charged separately
• Tool hire from Toddy Tool Hire 01394 447658

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━`

    return document
  }

  /**
   * Generate a project timeline/plan document
   */
  generateProjectPlan(
    projectType: string,
    timeline: any[],
    totalDuration: string
  ): string {
    let document = `
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
         PROJECT TIMELINE
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

PROJECT: ${projectType.toUpperCase()}
Total Duration: ${totalDuration}
Start Date: ${new Date().toLocaleDateString('en-GB')}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
PHASE BREAKDOWN
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
`

    let weekCounter = 1
    timeline.forEach((phase: any, index: number) => {
      document += `
PHASE ${index + 1}: ${phase.phase.toUpperCase()}
Duration: ${phase.duration}
Week ${weekCounter}${phase.duration.includes('week') ? `-${weekCounter + parseInt(phase.duration) - 1}` : ''}
─────────────────────────────────────`
      
      if (phase.tasks && phase.tasks.length > 0) {
        phase.tasks.forEach((task: string) => {
          document += `
  ✓ ${task}`
        })
      }
      
      if (phase.dependencies) {
        document += `
  ⚠ Dependencies: ${phase.dependencies.join(', ')}`
      }
      
      document += '\n'
      
      if (phase.duration.includes('week')) {
        weekCounter += parseInt(phase.duration)
      } else if (phase.duration.includes('day')) {
        weekCounter += 1
      }
    })

    document += `
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
KEY MILESTONES
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

• First Fix Complete: Week 2 - Payment Due (25%)
• Second Fix Complete: Week 3 - Payment Due (25%)
• Project Completion: ${totalDuration} - Final Payment (25%)

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
IMPORTANT NOTES
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

• Timeline assumes no delays for materials
• Weather may affect external work
• Building control inspections required at key stages
• Tool hire available from Toddy Tool Hire

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━`

    return document
  }

  /**
   * Generate document context for AI
   */
  getDocumentContext(query: string): string {
    const documentKeywords = ['quote document', 'project plan', 'timeline document', 'create document', 'generate quote', 'formal quote']
    
    if (documentKeywords.some(keyword => query.toLowerCase().includes(keyword))) {
      return `
## DOCUMENT GENERATION AVAILABLE:

I can create professional documents for you:

1. **Quote Document** - Formal quotation with full breakdown, payment terms, T&Cs
2. **Project Timeline** - Week-by-week plan with milestones and dependencies
3. **Materials List** - Shopping list with suppliers and costs

Just ask: "Create a downloadable quote document" or "Generate project timeline"
`
    }
    
    return ''
  }
}

export const documentGeneratorService = new DocumentGeneratorService()